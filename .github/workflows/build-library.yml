name: Build Library
'on':
  pull_request:
    branches:
    - main
    - develop
  push:
    branches:
    - main
    - develop
    - release/**
permissions:
  contents: write
jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
      versionCode: ${{ steps.run-number.outputs.versionCode }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.0.0
      with:
        versionSpec: 5.x
    - id: gitversion
      name: Use GitVersion
      uses: gittools/actions/gitversion/execute@v3.0.0
      with:
        useConfigFile: true
        configFilePath: ./gitversion.yml
    - id: run-number
      run: |-
        current_run_number=${{ github.run_number }}
        new_number=$((current_run_number+0))
        echo "versionCode=${new_number}" >> $GITHUB_OUTPUT
    - name: Generate Job Summary
      run: |-
        echo "# Version Info
        Semantic Version: ${{ steps.gitversion.outputs.semVer }}
        Version Number: ${{ steps.run-number.outputs.versionCode }}" >> $GITHUB_STEP_SUMMARY
  build-android:
    needs:
    - version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration:
        - buildCommand: :serializable:assembleRelease
          filesystemLocation: ./serializable/build/outputs/aar/serializable-release.aar
          artifactName: serializable-android.aar
          artifactKey: serializable-aar
          needsZip: false
          artifactMimeType: application/zip
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: temurin
    - name: Setup gradle
      uses: gradle/actions/setup-gradle@v3
    - name: Build with Gradle
      env:
        ORG_GRADLE_PROJECT_version: ${{ needs.version.outputs.version }}
      run: ./gradlew ${{ matrix.configuration.buildCommand }}
    - name: Rename Artifact
      run: mv ${{ matrix.configuration.filesystemLocation }} ./${{ matrix.configuration.artifactName }}
    - name: Zip if needed
      if: ${{ matrix.configuration.needsZip }}
      run: zip -r ${{ matrix.configuration.artifactName }}.zip ./${{ matrix.configuration.artifactName }}
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration.artifactKey }}
        path: ./${{ matrix.configuration.artifactName }}${{ matrix.configuration.needsZip && '.zip' || '' }}
  build-ios:
    needs:
    - version
    runs-on: macos-latest
    strategy:
      matrix:
        configuration:
        - buildCommand: :serializable:linkPodReleaseFrameworkIosArm64
          filesystemLocation: ./serializable/build/bin/iosArm64/podReleaseFramework/serializable.framework
          artifactName: serializable-iosArm64.framework
          artifactKey: serializable-iosArm64
          needsZip: true
          artifactMimeType: application/zip
        - buildCommand: :serializable:linkPodReleaseFrameworkIosSimulatorArm64
          filesystemLocation: ./serializable/build/bin/iosSimulatorArm64/podReleaseFramework/serializable.framework
          artifactName: serializable-iosSimulatorArm64.framework
          artifactKey: serializable-iosSimulatorArm64
          needsZip: true
          artifactMimeType: application/zip
        - buildCommand: :serializable:linkPodReleaseFrameworkIosX64
          filesystemLocation: ./serializable/build/bin/iosX64/podReleaseFramework/serializable.framework
          artifactName: serializable-iosX64.framework
          artifactKey: serializable-iosX64
          needsZip: true
          artifactMimeType: application/zip
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: temurin
    - name: Setup gradle
      uses: gradle/actions/setup-gradle@v3
    - name: Build with Gradle
      env:
        ORG_GRADLE_PROJECT_version: ${{ needs.version.outputs.version }}
      run: ./gradlew ${{ matrix.configuration.buildCommand }}
    - name: Rename Artifact
      run: mv ${{ matrix.configuration.filesystemLocation }} ./${{ matrix.configuration.artifactName }}
    - name: Zip if needed
      if: ${{ matrix.configuration.needsZip }}
      run: zip -r ${{ matrix.configuration.artifactName }}.zip ./${{ matrix.configuration.artifactName }}
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.configuration.artifactKey }}
        path: ./${{ matrix.configuration.artifactName }}${{ matrix.configuration.needsZip && '.zip' || '' }}
  release:
    permissions:
      contents: write
    needs:
    - version
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Create tag for release
      uses: rickstaa/action-create-tag@v1
      with:
        tag: v${{ needs.version.outputs.version }}
    - id: create_release
      name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: v${{ needs.version.outputs.version }}
        name: Release ${{ needs.version.outputs.version }}
        draft: false
        prerelease: ${{ github.ref != 'refs/heads/main' }}
  publish-release:
    needs:
    - version
    - release
    - build-android
    - build-ios
    runs-on: ubuntu-latest
    strategy:
      matrix:
        artifact:
        - key: serializable-iosArm64
          name: serializable-iosArm64.framework.zip
          mimeType: application/zip
        - key: serializable-iosSimulatorArm64
          name: serializable-iosSimulatorArm64.framework.zip
          mimeType: application/zip
        - key: serializable-iosX64
          name: serializable-iosX64.framework.zip
          mimeType: application/zip
        - key: serializable-aar
          name: serializable-android.aar
          mimeType: application/zip
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ${{ matrix.artifact.key }}
        path: ./
    - name: Add version to file name
      run: |-
        file="${{ matrix.artifact.name }}"
        echo "NEW_NAME=${file%%.*}-v${{ needs.version.outputs.version }}.${file#*.}" >> $GITHUB_ENV
    - name: Upload Artifact to Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./${{ matrix.artifact.name }}
        asset_name: ${{ env.NEW_NAME }}
        asset_content_type: ${{ matrix.artifact.mimeType }}
  publish-sonatype:
    permissions:
      contents: read
    needs:
    - version
    if: github.ref == 'refs/heads/main'
    runs-on: macos-latest
    strategy:
      matrix:
        module:
        - serializable
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: temurin
    - name: Setup gradle
      uses: gradle/actions/setup-gradle@v3
    - name: Build with Gradle
      env:
        ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
        ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
        ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.PGP_SECRET_KMP }}
        ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.PGP_PASSPHRASE }}
      run: |-
        ./gradlew -Pversion=${{ needs.version.outputs.version }} \
        -Ppom.url="https://github.com/${{ github.repository }}" \
        -Ppom.scm.connection="scm:git:git://github.com/${{ github.repository }}" \
        -Ppom.scm.developerConnection="scm:git:ssh://github.com/${{ github.repository }}" \
        -Ppom.scm.url="https://github.com/${{ github.repository }}" \
        ${{ matrix.module }}:publishAndReleaseToMavenCentral --no-configuration-cache
