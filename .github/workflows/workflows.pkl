amends "package://components.emilym.cl/actions/actions@0.1.13#/render.pkl"
import "package://components.emilym.cl/actions/actions@0.1.13#/common/target.pkl" as target

_modules = new Listing {
    "serializable"
}
workflows = new Listing {
    (import("package://components.emilym.cl/actions/actions@0.1.13#/build-kmp-lib.pkl")) {
        targets = new Listing {
            target.buildIosMultiplatformTarget("serializable", "x64")
            target.buildIosMultiplatformTarget("serializable", "arm64")
            target.buildIosMultiplatformTarget("serializable", "simulatorArm64")
            target.buildDarwinMultiplatformTarget("serializable", "macos", "x64")
            target.buildDarwinMultiplatformTarget("serializable", "macos", "arm64")
            target.buildDarwinMultiplatformTarget("serializable", "watchos", "x64")
            target.buildDarwinMultiplatformTarget("serializable", "watchos", "arm32")
            target.buildDarwinMultiplatformTarget("serializable", "watchos", "arm64")
            target.buildDarwinMultiplatformTarget("serializable", "watchos", "simulatorArm64")
            target.buildDarwinMultiplatformTarget("serializable", "tvos", "x64")
            target.buildDarwinMultiplatformTarget("serializable", "tvos", "arm64")
            target.buildDarwinMultiplatformTarget("serializable", "tvos", "simulatorArm64")
            target.buildAndroidMultiplatformTarget("serializable")
            target.buildJvmMultiplatformTarget("serializable")
            target.buildWasmJsMultiplatformTarget("serializable")
            target.buildWasmWasiMultiplatformTarget("serializable")
            target.buildMing64WMultiplatformTarget("serializable")
            target.buildLinuxMultiplatformTarget("serializable", "x64")
            target.buildLinuxMultiplatformTarget("serializable", "arm64")
        }
    }
    import("package://components.emilym.cl/actions/actions@0.1.13#/lint.pkl")
}